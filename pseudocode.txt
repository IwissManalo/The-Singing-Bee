

# use hashtags as guide
# remember to do research about how to make pseudocode or whats tackled in the module


start

set song_list = songlist.json
set year_choice = []
set song_choice = []
set player_choice = None
set player_name = None

def list_is_empty(chosen_songs))
    if not chosen_songs:
        return True  
    else 
        return False 

# game menu
adsasdsa



# song selection
song_selection():
    while true:
        print "choose year"
        for year in song_list:
            print year
        endfor
        print "[D] if Done"

        get player_choice
        if player_choice = 'D':
            if list_is_empty(song_choice):
                print("please add song first")
                continue
            endif

            print "your songs"
            for song in song_choice:
                print song
            endfor

            print "[B] to  go back"
            get player_choice

            if player_choice = 'B':
                continue
            else:
                endwhile
        else:
            year_choice insert player_choice
        endif

        print "choose song"
        for song in song_list[year_choice[0]]:
            print song
        endfor
        print "[B] to go back"

        get player_choice
        if player_choice = 'B':
            year_choice remove 0
            continue
        else:
            song_choice insert player_choice
        endif
        




    




# start round

def song_info(value):
    return song_List[year_choice[0]][song_choice[0]][value]


// no start_round function

set player_choice = 0
set player_hint_count = 3
set player_skipped_song = False
set player_used_hint = False

print player_status (player_name, player_hint_count, player_points)

print(song_info("Lyrics"))

while True:
    
    // remove the sound block
    if not player_skipped_song:
        sounds.play_background(song_info("sound"))
    
        display press_any_key()

     sound.stop_sound()

        sounds.play_background("sounds/game\\wautung_choice_sound.wav")
        player_skipped_song = True
        display clear_screen()
        continue
    endif

    if player_used_hint:
        print(song_info("hint"))
    else:
        print(song_info("choice"))
    endif

    // user 'get'when getting user input
    insert player_choice = util.get_input_position


    // remove all python methods
    if player_choice.upper() not in ['A', 'B', 'C', 'D', 'H']:
        display invaid_option
        continue
    endif
    
    if player_choice.upper() = 'H'

        if player_hint_count <= 0:
        // remove all sound functions
            sound.play_sound("sounds/game_sound\\invalid_sound.wav")
            display hint_text_info("You already used hint")
            continue
        endif

        if player_used_hint:
            sounds.play_sound("sounds/game_sounds\\invalid_sound.wav")
            display hint_text_info("You already used hint")
            continue
        endif

        if not player_used_hint and player_hint_count > 0:
            sound.play_sound("sound/game_sound\\used_hint_sound.wav")
            get player_hint_count = player_hint_count - 1
            get player_used_hint = True
            display hint_text_info("You used hint")
            continue
        endif
    endif

    if player_used_hint:
        
        if player_choice.upper() not in song_info("hint"):
            sound.play_sound("sound/game_sound\\invalid_sound.wav")
            display answer_results("Wrong answer.")
        endif
    endif

    if player_choice.upper() != song_info("answer"):
        sounds.play_sound("sounds/game_sounds\\wrong_answer_sound.wav")
        display answer_result("Wrong answer.")

    elif player_used_hint and player_choice.upper() = song_info("answer"):
        sound.play_sound("sound/game_sound\\invalid_sound.wav")
        get player_points = player_points + 500

    else:
        sound.play_sound("sound/game_sound\\invalid_sound.wav")
        display answer_results("Correct answer!")
        get player_points = player_points + 1000
    endif

    sound.stop_sound()

    set player_used_hint = False
    set player_skipped_song = False


    // dont use python method. just say song choice remove index 0
    song_choice.pop(0)
    year_choice.pop(0)

    // remove any UI related thingy
    display clear_screen()

    if util.list_is_empty(song_choice): 

        // find a way to print the total score 
        display total_score(player_name, player_points)

        get player_choice = util.ask_play_again(player_name)
    endif

    if player_choice:
        break
    endif
endwhile